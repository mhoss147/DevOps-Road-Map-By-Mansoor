# What is a package?

    - It is a way of distributing applications; it may contains
    binaries, configuration files, documents; basically an application
    packaged into one file.


    - Redhat use .rpm and Debian uses .deb package  

    - When we install package it is coming from - /etc/apt/sources.list

    cat /etc/apt/sources.list

 # Install a steam locomotive (animation)

    
    - Create a Folder named packages

    mkdir packages

    cd packages

    - Downloading SL package for debian

    wget http://ftp.us.debian.org/debian/pool/main/s/sl/sl_3.03-17_amd64.deb

    - Install that package using tool- dpkg

    sudo dpkg -i sl_3.03-17_amd64.deb (packageName)

    - Check It

    sl

    - Show all the package installed 

    sudo dpkg -l


    - Filter out with grep

    sudo dpkg -l | grep sl
    

    - Filter out with grep + word with sl

    sudo dpkg -l | grep -w sl


 # Install a steam locomotive (animation) using apt

    - First of all run update to resynchronize

    sudo apt-get update


    - Install the package (without http)

    sudo apt-get install sl


    - Check It

    sl

# Remove a package

   - Remove a package using 'remove or purge'

   sudo apt-get remove (remove everything except config files)

   sudo apt-get purge (remove everything)
    
    
    
    - Install nginx 
    // nginx is a web server, runs as a service 
    // nginx can only run as static web server (by default)

    sudo apt-get install nginx

    - Remove nginx

    sudo apt-get remove nginx


    - Check if removed everything? No

   sudo dpkg -l | grep nginx


   - To get rid og them 

   sudo apt-get autoremove

   // Static web server can be a blog (html, css, js), all will see same, browser handle the code/logic

   // Dynamic web server can be of any complexity, functions like login, comments, complicated to hostname, have serverside connected


   // Service is a software that provides a 'service' and 'listens' for requests 

   // If a service runs in the background it is called 'Daemon'

   // Not all services are 'Daemon' and not all Daemon are 'services'

# Manage nginx server using systemctl
   
   // systemctl - Control the systemd system and service manager

   - Install nginx

   sudo apt-get install nginx

   - See name of the services system started/stopped

   sudo systemctl --type=service


   - See the name of the services running
   // see nginx is running...

   sudo systemctl --type=service --state=running

   - Start/stop... service using systemctl

   sudo systemctl start "serviceName" / sudo systemctl start nginx

   sudo systemctl stop "serviceName" / sudo systemctl stop nginx

   sudo systemctl status "serviceName" / sudo systemctl status nginx

   sudo systemctl enable "serviceName"

   sudo systemctl disable "serviceName"


# Checking if our web server is working

   - See all the running processes

   ps aux

   // VSZ = virtual memory, RSS = actual memory

   - Find the specific process is running ot Not

   ps aux | grep nginx (nginx is the serviceName)

// you will see nginx: master process /usr/sbin/nginx -g daemon on; master_process on

   - Kill a process

   sudo kill 1269 (1269 is the PID - processID)

   or
//using the -9 switch ensures that the process is effectively killed. Even though a frozen or unresponsive process may not respond to a simple TERM signal, it will die when sent a KILL signal.

   sudo kill -9 1269 (1269 is the PID - processID)

   // Kill command sends signalName 'SIGTERM' and signalNumber '15'
   // Kill sends Software termination signal


   -  // Netstat, derived from the words network and statistics — 
      // is a program that's controlled via commands issued in the
      // command line. It delivers basic statistics on all network 
      // activities and informs users on which portsand addresses 
      // the corresponding connections (TCP, UDP) are running and which ports are open for tasks.


# If you dont know a package name then search this way...

   - I am looking for 'netstat', so search

   sudo apt-cache search netstat

   - Most important netstat switch 't,u,l,n,p'
   // Research what they do
   // 'tulnp' shows services listening for requests in the system/server

   - Install 'net-tools' for netstat

   sudo apt-get install net-tools

   netstat -tulnp

   // To see PID/program name, use sudo

   sudo netstat -tulnp


Active Internet connections (only servers)
Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name    
tcp        0      0 0.0.0.0:22              0.0.0.0:*               LISTEN      621/sshd            
tcp        0      0 0.0.0.0:31297           0.0.0.0:*               LISTEN      925/node            
tcp        0      0 0.0.0.0:80              0.0.0.0:*               LISTEN      708/nginx: master p 
tcp6       0      0 :::22                   :::*                    LISTEN      621/sshd            
tcp6       0      0 ::1:3350                :::*                    LISTEN      476/xrdp-sesman     
tcp6       0      0 :::3389                 :::*                    LISTEN      533/xrdp            
tcp6       0      0 :::80                   :::*                    LISTEN      708/nginx: master p 
udp        0      0 0.0.0.0:68              0.0.0.0:*                           352/dhclient        
udp6       0      0 fe80::8e1:b9ff:feca:546 :::*                                396/dhclient 

   // 0.0.0.0 means all network interfaces

   $ ip a

   // we see network interfaces
   link/loopback  127.0.0.1/8 
   link/ether 172.31.34.0/20 which is bridged from my computer

   - Let's edit the nginx default configuration

   sudo vim /etc/nginx/sites-enabled/default  (/etc/... is the default location)

   sudo vim /etc/nginx/sites-enabled/default
   // Comment out this line # listen [::]:80...
   // And edit listen 80... to listen 127.0.0.1:80...
   // Save and exit

   - Check if there is any syntax error in the configuration file we just changed

   sudo nginx -t

   // No error
   nginx: the configuration file /etc/nginx/nginx.conf syntax is ok
   nginx: configuration file /etc/nginx/nginx.conf test is successful


   - Restart nginx server
    
    sudo systemctl restart nginx

    netstat -tulnp

   // you will see nginx is only listening to is
   // tcp        0      0 127.0.0.1:80            0.0.0.0:*               LISTEN      -    

   // You can change the configuration file to previous status and run

   sudo systemctl restart nginx

   netstat -tulnp

    
    - Use of netcat are many, the most use of netcat is to see if a port is open or not

    nc -zv www.google.com 80     (google=website address, 80 = port)

    ip a

    inet 127.0.0.1/8 scope host lo

    netinet 172.31.44.167/20 brd 172.31.47.255 scope global ens5

   nc -zv 127.0.0.1 80

   nc -zv 172.31.44.167 80
   
   // If Nginx service is not running than above ports may be not listening
   // Install and start nginx, and run netcat commands

   - Let's edit the nginx default configuration

   sudo vim /etc/nginx/sites-enabled/default  (/etc/... is the default configuration location)

// Edit the server {
   listen 80 default_server;  > listen 127.0.0.1:80 default_server;
}

# Press ctl + r to go in Reverse-search mode, and start typing one one the key word of previous command...

   ctr + r restart

   sudo systemctl restart nginx

# Troubleshooting a nginx/ web server, why not running...

   - 1. Check it's public ip working or network

   nc -zv 172.31.44.167 80      (172...=public ip, 80=portNumber)

   nc: connect to 172.31.44.167 port 80 (tcp) failed: Connection refused
// If you get message like above means,
// there is no firewall issue, nothing is listening to port 80 for the ip 172...


   - 2. Check if the process is running

   ps aux| grep nginx

   root      3541  0.0  0.0 124972  1432 ?        Ss   02:18   0:00 nginx: master process /usr/sbin/nginx -g daemon on; master_process on;
// means it is running


   - 3. Use netstat and see what is listening to port 80

   sudo netstat -tulnp

   tcp        0      0 127.0.0.1:80            0.0.0.0:*               LISTEN      3541/nginx -g daemo
// Only ip 127... is listening to port 80

 - Let's edit the nginx default configuration

   sudo vim /etc/nginx/sites-enabled/default  (/etc/... is the default configuration location)

// Edit the server {
   listen 127.0.0.1:80 default_server; > listen 80 default_server;
}


# If you want to force quit “kill” a running command, you can use “Ctrl + c”.
# If you want to force quit “kill” a running command, you can use “Ctrl + z”.





























   











































   


   






    

































    



